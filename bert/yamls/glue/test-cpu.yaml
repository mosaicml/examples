# Whether to run the various GLUE jobs serially or in parallel
parallel: false

# Basic run configuration, additional details will be added to this name for each GLUE task, and each random seed
base_run_name: glue-finetuning-benchmark
default_seed: 1111
precision: fp32

# Tokenizer for dataset creation
tokenizer_name: &tokenizer_name bert-base-uncased

# Base model config
model:
  name: hf_bert
  pretrained_model_name: prajjwal1/bert-tiny
  tokenizer_name: prajjwal1/bert-tiny



# Saving and loading
# starting_checkpoint_load_path: s3://mosaicml-internal-checkpoints-shared/alex/bert/dc-2022-07-v2/bert-dc-2022-07-baseline-alibi-glu--seed1654/checkpoints/ep0-ba68796-rank0-43383.486282wct
local_pretrain_checkpoint_folder: ./local-bert-checkpoints/
save_finetune_checkpoint_prefix: ./local-finetune-checkpoints/
# for s3 logging
# save_finetune_checkpoint_prefix: s3://<bucket>/remote-finetune-checkpoints
save_finetune_checkpoint_folder: ${save_finetune_checkpoint_prefix}/${base_run_name}

# Loggers
# loggers:
#   wandb:
#     project: <project>
#     entity: <entity>

# Callbacks
callbacks:
  lr_monitor: {}
  speed_monitor: {}

# Scheduler
scheduler:
  name: linear_with_warmup
  t_warmup: 0.06dur

# Task configuration
tasks:
  mnli:
    # Specify any extra task-specific arguments for the trainer here
    trainer_kwargs:
      # We keep one MNLI checkpoint locally so that we can start finetuning of 
      # RTE, MRPC and STS-B from the MNLI checkpoint
      save_num_checkpoints_to_keep: 1
      max_duration: 10ba
      eval_subset_num_batches: 10
  rte:
    trainer_kwargs:
      save_num_checkpoints_to_keep: 0
      max_duration: 10ba
      eval_subset_num_batches: 10