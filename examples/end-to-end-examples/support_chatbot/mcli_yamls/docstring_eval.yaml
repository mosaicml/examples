name: mpt-support-bot-composer_docstring_eval

compute:
  gpus: 8  # Number of GPUs to use

  ## These configurations are optional
  # cluster: r0z0 # Name of the cluster to use for this run
  # gpu_type: a100_80gb # Type of GPU to use.

integrations:
# Clone and install the llm-foundry repo so we can run scripts from it
- integration_type: git_repo
  git_repo: mosaicml/llm-foundry
  git_branch: main # TODO: pin
  pip_install: -e .[gpu]
  ssh_clone: false # Should be true if using a private repo
# Uncomment and fill in to log to WandB. Also uncomment the loggers section near the bottom of the yaml
- integration_type: wandb
  entity: mosaic-ml
  project: support-bot-demo

# cd into the llm-foundry/scripts directory and run the train.py script
command: |
  cd llm-foundry/scripts
  composer eval/eval.py /mnt/config/parameters.yaml

image: mosaicml/pytorch:1.13.1_cu117-python3.10-ubuntu20.04 # Use the Docker image provided by MosaicML

parameters:
  max_seq_len: 2048
  seed: 1
  precision: amp_fp16
  model_name_or_path: mosaicml/mpt-7b

  models:
  -
    model_name: ${model_name_or_path}
    model:
      name: hf_causal_lm
      pretrained_model_name_or_path: ${model_name_or_path}
      init_device: cpu
      pretrained: true
      load_path: oci://mosaicml-internal-checkpoints/support-bot-demo/checkpoints/ep20-ba320-rank0.pt
    tokenizer:
      name: ${model_name_or_path}
      kwargs:
        model_max_length: ${max_seq_len}

  device_eval_batch_size: 8

  # FSDP config for model sharding
  fsdp_config:
    sharding_strategy: FULL_SHARD
    mixed_precision: FULL
    sync_module_states: true

  icl_tasks:
  -
    label: composer_docstring_eval
    dataset_uri: oci://mosaicml-internal-checkpoints/support-bot-demo/data/eval/composer_docstrings.jsonl
    num_fewshot: [1, 3, 5]
    icl_task_type: language_modeling
    continuation_delimiter: '\nAnswer'
    batch_size: 8
    max_seq_len: ${max_seq_len}